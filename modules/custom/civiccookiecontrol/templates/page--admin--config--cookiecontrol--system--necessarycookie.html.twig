{#
/**
 * @file
 * Theme override for a system settings form.
 *
 * This template will be used when a system config form specifies 'config_form'
 * as its #theme callback.  Otherwise, by default, system config forms will be
 * themed by form.html.twig. This does not alter the appearance of a form at all,
 * but is provided as a convenience for themers.
 *
 * Available variables:
 * - form: The confirm form.
 */
#}

{#
/**
 * @file
 * Seven's theme implementation to display a single Drupal page.
 *
 * The doctype, html, head, and body tags are not in this template. Instead
 * they can be found in the html.html.twig template normally located in the
 * core/modules/system directory.
 *
 * Available variables:
 *
 * General utility variables:
 * - base_path: The base URL path of the Drupal installation. Will usually be
 *   "/" unless you have installed Drupal in a sub-directory.
 * - is_front: A flag indicating if the current page is the front page.
 * - logged_in: A flag indicating if the user is registered and signed in.
 * - is_admin: A flag indicating if the user has permission to access
 *   administration pages.
 *
 * Site identity:
 * - front_page: The URL of the front page. Use this instead of base_path when
 *   linking to the front page. This includes the language domain or prefix.
 *
 * Page content (in order of occurrence in the default page.html.twig):
 * - node: Fully loaded node, if there is an automatically-loaded node
 *   associated with the page and the node ID is the second argument in the
 *   page's path (e.g. node/12345 and node/12345/revisions, but not
 *   comment/reply/12345).
 *
 * Regions:
 * - page.header: Items for the header region.
 * - page.pre_content: Items for the pre-content region.
 * - page.breadcrumb: Items for the breadcrumb region.
 * - page.highlighted: Items for the highlighted region.
 * - page.help: Dynamic help text, mostly for admin pages.
 * - page.content: The main content of the current page.
 *
 * @see template_preprocess_page()
 * @see html.html.twig
 */
#}
<header class="content-header clearfix">
    <div class="layout-container">
        <div class="ccc-container">

            <header>
                <h1>
                    <a href="https://www.civicuk.com/cookie-control" title="Cookie Control by Civic" targt="_blank">Cookie Control by Civic</a>
                </h1>
            </header>

            <hr>

            <div>
                <p>With an elegant  user-interface that doesn't hurt the look and feel of your site, Cookie Control is a mechanism for user consent and the use of cookies.</p>
                <p>For more information, please visit Civic's Cookie Control pages at: <a href="https://www.civicuk.com/cookie-control" title="Cookie Control by Civic" target="_blank">https://www.civicuk.com/cookie-control</a></p>.


                <a class="civic" href="https://www.civicuk.com/cookie-control/download" target="_blank">Get Your API Key</a>
            </div>
        </div>
        {{ page.header }}
    </div>
</header>

<div class="layout-container">
    {{ page.pre_content }}
    {{ page.breadcrumb }}
    <main class="page-content clearfix" role="main">
        <div class="visually-hidden"><a id="main-content" tabindex="-1"></a></div>
        <div class="messages messages--warning">
            This is a list of cookies that are necessary for your website's functionality, and you don't want to be deleted by Cookie Control. In most cases you won't have to set this option. Such cookies should be marked as Secure and HttpOnly and hence Cookie Control won't be able to delete them anyway.
        </div>
        <div class="messages messages--warning">
            Be careful not to overuse this option, as this might end in you protecting cookies that store personal identifying information, hence defeating the purpose of using Cookie Control.
        </div>
        {{ page.highlighted }}
        {% if page.help %}
            <div class="help">
                {{ page.help }}
            </div>
        {% endif %}
        {{ page.content }}
    </main>

</div>
